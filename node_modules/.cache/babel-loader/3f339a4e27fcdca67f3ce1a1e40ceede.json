{"remainingRequest":"/Users/philzhou/Documents/GitHub/try/node_modules/babel-loader/lib/index.js!/Users/philzhou/Documents/GitHub/try/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/philzhou/Documents/GitHub/try/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/philzhou/Documents/GitHub/try/src/components/IndexComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/philzhou/Documents/GitHub/try/src/components/IndexComponent.vue","mtime":1702833142475},{"path":"/Users/philzhou/Documents/GitHub/try/node_modules/cache-loader/dist/cjs.js","mtime":1702828055033},{"path":"/Users/philzhou/Documents/GitHub/try/node_modules/babel-loader/lib/index.js","mtime":1702828055179},{"path":"/Users/philzhou/Documents/GitHub/try/node_modules/cache-loader/dist/cjs.js","mtime":1702828055033},{"path":"/Users/philzhou/Documents/GitHub/try/node_modules/vue-loader/lib/index.js","mtime":1702828053452}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      posts: []\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    var uri = 'http://localhost:4000/posts';\n    this.axios.get(uri).then(function (response) {\n      _this.posts = response.data;\n    });\n  },\n  methods: {\n    deletePost: function deletePost(id) {\n      var _this2 = this;\n\n      var uri = \"http://localhost:4000/posts/delete/\".concat(id);\n      this.axios.delete(uri).then(function () {\n        _this2.posts.splice(_this2.posts.indexOf(id), 1);\n      });\n    }\n  }\n};",{"version":3,"sources":["IndexComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,OANA,qBAMA;AAAA;;AACA,QAAA,GAAA,GAAA,6BAAA;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,MAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,KAFA;AAGA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,EADA,EAEA;AAAA;;AACA,UAAA,GAAA,gDAAA,EAAA,CAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,GAAA,EAAA,IAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AACA,OAFA;AAGA;AAPA;AAZA,CAAA","sourcesContent":["<template>\n  <div>\n    <h1>Community Posts</h1>\n    <div class=\"post-container\">\n      <div v-for=\"post in posts\" :key=\"post._id\" class=\"post-card\">\n        <h2>{{ post.title }}</h2>\n        <p>{{ post.body }}</p>\n        <div class=\"actions\">\n          <router-link :to=\"{name: 'edit', params: { id: post._id }}\" class=\"btn btn-edit\">Edit</router-link>\n          <button @click.prevent=\"deletePost(post._id)\" class=\"btn btn-delete\">Delete</button>\n        </div>\n      </div>\n    </div>\n    <router-link :to=\"{ name: 'create' }\" class=\"btn btn-create\">Create New Post</router-link>\n  </div>\n</template>\n\n<script>\n  export default {\n      data() {\n        return {\n          posts: []\n        }\n      },\n      created() {\n      let uri = 'http://localhost:4000/posts';\n      this.axios.get(uri).then(response => {\n        this.posts = response.data;\n      });\n    },\n    methods: {\n      deletePost(id)\n      {\n        let uri = `http://localhost:4000/posts/delete/${id}`;\n        this.axios.delete(uri).then(() => {\n            this.posts.splice(this.posts.indexOf(id), 1);\n        });\n      }\n    }\n  }\n</script>\n\n<style scoped>\n.edit-post-container {\n  max-width: 700px;\n  margin: 2rem auto;\n  background: #fff;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\nh1 {\n  color: #333;\n  text-align: center;\n  margin-bottom: 1.5rem;\n}\n.form-group {\n  margin-bottom: 1rem;\n}\nlabel {\n  display: block;\n  margin-bottom: .5rem;\n  color: #666;\n}\ninput, textarea {\n  width: 100%;\n  padding: 0.5rem;\n  border-radius: 4px;\n  border: 1px solid #ddd;\n  margin-bottom: 1rem;\n}\n.btn-update {\n  background-color: #5cb85c;\n  color: white;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n.btn-update:hover {\n  background-color: #4cae4c;\n}\n.post-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n}\n\n.post-card {\n  background: #fff;\n  border: 1px solid #dedede;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n}\n\n.actions {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 1rem;\n}\n\n.btn {\n  border: none;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.btn-edit {\n  background-color: #ffc107;\n}\n\n.btn-delete {\n  background-color: #dc3545;\n}\n\n.btn-create {\n  background-color: #28a745;\n  color: white;\n  display: block;\n  width: max-content;\n  margin-top: 1rem;\n}\n\n.btn:hover {\n  opacity: 0.9;\n}\n</style>"],"sourceRoot":"src/components"}]}